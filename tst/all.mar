^include(@/pico/pico.mar)

;; TITLE
pm_set_title_c("pico-mar")

;; SOUND
pm_output_sound("start.wav")

;; GET-SIZE
var log = pm_get_size().log
print(log)

var cnt = pm_pct_to_pos(50,50)
print(cnt)

;; CLEAR
pm_set_color_clear(Color [255,255,255,255])
pm_output_clear()

pm_input_delay(2000)

;; DRAW-IMAGE
pm_set_anchor(HAnchor.Center(), VAnchor.Middle())
pm_output_draw_image(cnt, "open.png")

pm_input_delay(2000)

;; CROP-IMAGE
pm_output_clear()
pm_set_image_crop(Rect [XY[0,0], WH[24,24]])
pm_set_image_size(WH [24,24])
pm_output_draw_image(cnt, "open.png")

pm_input_delay(2000)

;; DRAW-PIXEL
pm_set_color_clear(Color [0,0,0,255])
pm_set_color_draw(Color [255,255,255,255])
pm_output_clear()
pm_output_draw_pixel(cnt)

pm_input_delay(2000)

;; DRAW-TEXT
pm_set_font(null, 10)
pm_output_draw_text(cnt, "Hello!")

pm_input_delay(2000)

;; SET-GRID
pm_set_grid(false)

pm_input_delay(2000)

;; WRITE
pm_output_clear()
pm_set_cursor(pm_pct_to_pos(20,20))
pm_output_write("1 ")
pm_output_write("2 ")
pm_output_writeln("3")
pm_output_writeln("")
pm_output_writeln("pico")

pm_input_delay(2000)

;; SET-FONT
pm_output_clear()
pm_set_font(null, 5)
pm_output_writeln("pico")

pm_input_delay(2000)

;; MOUSE
var e: PM.Mouse.Button = pm_input_event(`SDL_MOUSEBUTTONDOWN`)!Mouse!Button
pm_output_draw_pixel(XY [e.pos.x,e.pos.y])

pm_input_delay(2000)

;; SET-GRID
pm_output_clear()
pm_set_grid(true)

;; DRAW-LINE
pm_output_draw_line(pm_pct_to_pos(0,100), pm_pct_to_pos(100,0))
pm_output_draw_line(pm_pct_to_pos(0,0), pm_pct_to_pos(100,100))

;; DRAW-RECT
pm_output_draw_rect(Rect [cnt, WH [21,21]])

;; DRAW-OVAL
pm_output_draw_oval(Rect [pm_pct_to_pos(66,50), WH [6,6]])

;; SET-ANCHOR
pm_set_anchor(HAnchor.Right(), VAnchor.Top())
pm_output_draw_rect(Rect [pm_pct_to_pos(100,0), WH [5,5]])

pm_input_delay(2000)

;; SET-ZOOM

var phy = pm_get_size().phy

pm_output_clear()
pm_set_size(phy, WH [log.w*0.9,log.h*0.9])
pm_output_draw_pixel(pm_pct_to_pos(50,50))
pm_input_delay(500)

pm_output_clear()
pm_set_size(phy, WH [log.w*0.8,log.h*0.8])
pm_output_draw_pixel(pm_pct_to_pos(50,50))
pm_input_delay(500)

pm_output_clear()
pm_set_size(phy, WH [log.w*0.7,log.h*0.7])
pm_output_draw_pixel(pm_pct_to_pos(50,50))
pm_input_delay(500)

pm_output_clear()
pm_set_size(phy, WH [log.w*0.6,log.h*0.6])
pm_output_draw_pixel(pm_pct_to_pos(50,50))
pm_input_delay(500)

pm_output_clear()
pm_set_size(phy, WH [log.w*0.5,log.h*0.5])
pm_output_draw_pixel(pm_pct_to_pos(50,50))
pm_input_delay(500)

;; SET-PAN

var pos = pm_pct_to_pos(50,50)

pm_output_clear()
pm_set_scroll(XY [0,0])
pm_output_draw_pixel(pos)
pm_input_delay(500)

pm_output_clear()
pm_set_scroll(XY [5,5])
pm_output_draw_pixel(pos)
pm_input_delay(500)

pm_output_clear()
pm_set_scroll(XY [10,10])
pm_output_draw_pixel(pos)
pm_input_delay(500)

pm_output_clear()
pm_set_scroll(XY [5,5])
pm_output_draw_pixel(pos)
pm_input_delay(500)

pm_output_clear()
pm_set_scroll(XY [0,0])
pm_output_draw_pixel(pos)
pm_input_delay(500)

pm_input_delay(2000)

pm_output_clear()
pm_set_size(phy, WH [64,36])
pm_output_draw_pixel(pm_pct_to_pos(50,50))

pm_input_delay(2000)
